package com.fmall.springmvc.generate.pojo;

import java.util.ArrayList;
import java.util.List;

public class SavingsTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public SavingsTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSavingsTypeIdIsNull() {
            addCriterion("savings_type_id is null");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdIsNotNull() {
            addCriterion("savings_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdEqualTo(Integer value) {
            addCriterion("savings_type_id =", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdNotEqualTo(Integer value) {
            addCriterion("savings_type_id <>", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdGreaterThan(Integer value) {
            addCriterion("savings_type_id >", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("savings_type_id >=", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdLessThan(Integer value) {
            addCriterion("savings_type_id <", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdLessThanOrEqualTo(Integer value) {
            addCriterion("savings_type_id <=", value, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdIn(List<Integer> values) {
            addCriterion("savings_type_id in", values, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdNotIn(List<Integer> values) {
            addCriterion("savings_type_id not in", values, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdBetween(Integer value1, Integer value2) {
            addCriterion("savings_type_id between", value1, value2, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("savings_type_id not between", value1, value2, "savingsTypeId");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameIsNull() {
            addCriterion("currency_name is null");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameIsNotNull() {
            addCriterion("currency_name is not null");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameEqualTo(String value) {
            addCriterion("currency_name =", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameNotEqualTo(String value) {
            addCriterion("currency_name <>", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameGreaterThan(String value) {
            addCriterion("currency_name >", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameGreaterThanOrEqualTo(String value) {
            addCriterion("currency_name >=", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameLessThan(String value) {
            addCriterion("currency_name <", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameLessThanOrEqualTo(String value) {
            addCriterion("currency_name <=", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameLike(String value) {
            addCriterion("currency_name like", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameNotLike(String value) {
            addCriterion("currency_name not like", value, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameIn(List<String> values) {
            addCriterion("currency_name in", values, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameNotIn(List<String> values) {
            addCriterion("currency_name not in", values, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameBetween(String value1, String value2) {
            addCriterion("currency_name between", value1, value2, "currencyName");
            return (Criteria) this;
        }

        public Criteria andCurrencyNameNotBetween(String value1, String value2) {
            addCriterion("currency_name not between", value1, value2, "currencyName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameIsNull() {
            addCriterion("savings_type_name is null");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameIsNotNull() {
            addCriterion("savings_type_name is not null");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameEqualTo(String value) {
            addCriterion("savings_type_name =", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameNotEqualTo(String value) {
            addCriterion("savings_type_name <>", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameGreaterThan(String value) {
            addCriterion("savings_type_name >", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameGreaterThanOrEqualTo(String value) {
            addCriterion("savings_type_name >=", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameLessThan(String value) {
            addCriterion("savings_type_name <", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameLessThanOrEqualTo(String value) {
            addCriterion("savings_type_name <=", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameLike(String value) {
            addCriterion("savings_type_name like", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameNotLike(String value) {
            addCriterion("savings_type_name not like", value, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameIn(List<String> values) {
            addCriterion("savings_type_name in", values, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameNotIn(List<String> values) {
            addCriterion("savings_type_name not in", values, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameBetween(String value1, String value2) {
            addCriterion("savings_type_name between", value1, value2, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTypeNameNotBetween(String value1, String value2) {
            addCriterion("savings_type_name not between", value1, value2, "savingsTypeName");
            return (Criteria) this;
        }

        public Criteria andSavingsTermIsNull() {
            addCriterion("savings_term is null");
            return (Criteria) this;
        }

        public Criteria andSavingsTermIsNotNull() {
            addCriterion("savings_term is not null");
            return (Criteria) this;
        }

        public Criteria andSavingsTermEqualTo(String value) {
            addCriterion("savings_term =", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermNotEqualTo(String value) {
            addCriterion("savings_term <>", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermGreaterThan(String value) {
            addCriterion("savings_term >", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermGreaterThanOrEqualTo(String value) {
            addCriterion("savings_term >=", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermLessThan(String value) {
            addCriterion("savings_term <", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermLessThanOrEqualTo(String value) {
            addCriterion("savings_term <=", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermLike(String value) {
            addCriterion("savings_term like", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermNotLike(String value) {
            addCriterion("savings_term not like", value, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermIn(List<String> values) {
            addCriterion("savings_term in", values, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermNotIn(List<String> values) {
            addCriterion("savings_term not in", values, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermBetween(String value1, String value2) {
            addCriterion("savings_term between", value1, value2, "savingsTerm");
            return (Criteria) this;
        }

        public Criteria andSavingsTermNotBetween(String value1, String value2) {
            addCriterion("savings_term not between", value1, value2, "savingsTerm");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table savings_type
     *
     * @mbggenerated do_not_delete_during_merge Sat Sep 21 23:41:00 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table savings_type
     *
     * @mbggenerated Sat Sep 21 23:41:00 CST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}